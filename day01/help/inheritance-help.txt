继承:
	Java中提供了一个关键字extends,用这个关键字，可以让一个类和另一个类建立起父子关系
	特点:
		子类能继承父类的非私有成员（成员变量、成员方法)
	继承后对象的创建
		子类的对象是由子类、父类共同完成的

注意事项:
	权限修饰符(public、private、protected、缺省)
		private		在本类中访问				
		缺省		在本类中访问	同一个包下其他类访问
		protected	在本类中访问	同一个包下其他类访问	任意包下子类访问
		public		在本类中访问	同一个包下其他类访问	任意包下子类访问	任意包下任意类访问
				private < 缺省 < protected < public
	单继承、Object
		单继承:		--只能有一个父类，但可以多层继承
			Java是单继承的，Java中的类不支持多继承，但是支持多层继承
		Object类:
			object类是java所有类的祖宗类。我们写的任何一个类，其实都是object的子类或子孙类
	方法重写:
		当子类觉得父类中的某个方法不好用，或者无法满足自己的需求时，子类可以重写一个方法名称参数列表一样的方法，
		去覆盖父类的这个方法，这就是方法重写
		注意事项:
			重写后，方法的访问，Java会遵循就近原则
			重写小技巧:
				使用@Override注解,他可以指定java编译器，检查我们方法重写的格式是否正确，
					代码可读性也会更好
				子类重写父类方法时，访问权限必须大于或者等于父类该方法的权限(public>protected>缺省)
				重写的方法返回值类型，必须与被重写方法的返回值类型一样，或者范围更小
				私有方法、静态方法不能被重写，如果重写会报错的
		应用场景:
			子类重写Object类的toString()方法，以便返回对象的内容
	子类访问其他成员变量:
		就近原则
			先子类局部范围找;
			然后子类成员范围找;
			然后父类成员范围找，如果父类范围还没有找到则报错
		子父类成员冲突,会优先访问子类的成员,可用super关键字访问父类的成员
